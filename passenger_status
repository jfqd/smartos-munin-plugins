#!/opt/local/bin/ruby

def output_config
  puts <<-END
graph_category App
graph_title passenger status
graph_vlabel count

sessions.label sessions
max.label max processes
running.label running processes
active.label active processes
END
  exit 0
end

def output_values
  status = `/opt/local/sbin/passenger-status`
  unless $?.success?
    $stderr.puts "failed executing passenger-status"
    exit 1
  end
  
  if status =~ /Version : 3/
    status =~ /Max\s+:\s+(\d+)/
    puts "max.value #{$1}"

    status =~ /Processes\s+:\s+(\d+)/
    puts "running.value #{$1}"

    total_sessions = 0
    status.scan(/Sessions: (\d+)/).flatten.each { |count| total_sessions += count.to_i }
    puts "sessions.value #{total_sessions}"
  else
    # Passener 4 and up
    status =~ /Max pool size\s+:\s+(\d+)/
    puts "max.value #{$1}"

    status =~ /Processes\s+:\s+(\d+)/
    puts "running.value #{$1}"

    active_processes = status.scan(/Sessions:\s+(\d+)/).flatten.select { |count| count.to_i != 0 }.size
    puts "active.value #{active_processes}"

    total_sessions = 0
    status.scan(/Sessions: (\d+)/).flatten.each { |count| total_sessions += count.to_i }
    puts "sessions.value #{total_sessions}"
  end
  
end

if ARGV[0] == "config"
  output_config
else
  output_values
end
